<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

      <!-- 注册一个Person对象，Spring会自动创建这个Person对象  -->
      <!-- 一个Bean标签可以注册一个组件
           class：要注册的组件全类名
           id：这个对象的唯一标识
      -->
      <bean id="person01" class="pers.hao.bean.Person">
            <!-- 使用property标签为Person对象的属性赋值
                 name="lastname"：指定属性名
                 value="HAO"：为这个属性赋值
            -->
            <property name="lastName" value="HAO"></property>
            <property name="age" value="21"></property>
            <property name="email" value="hao@gmail.com"></property>
            <property name="gender" value="male"></property>
      </bean>

      <bean id="person02" class="pers.hao.bean.Person">
            <property name="lastName" value="TOT"></property>
            <property name="age" value="16"></property>
            <property name="email" value="IOI@qq.com"></property>
            <property name="gender" value="male"></property>
      </bean>

      <bean id="person03" class="pers.hao.bean.Person">
            <!-- 调用有参构造器进行创建对象并赋值
                 1）constructor-arg的个数要与有参构造器参数的个数相同
                 2）constructor-arg中没有name只有value，传入的value顺序要与构造器的参数顺序对应
            -->
            <constructor-arg name="lastName" value="-O-"></constructor-arg>
            <constructor-arg name="age" value="15"></constructor-arg>
            <constructor-arg name="email" value="oo@163.com"></constructor-arg>
            <constructor-arg name="gender" value="female"></constructor-arg>
      </bean>

      <!-- 通过p名称空间为bean赋值：导入p名称空间 -->
      <!-- 名称空间：在xml中名称空间是用来防止标签重复的 -->
      <bean id="person04" class="pers.hao.bean.Person"
            p:lastName="Amy" p:age="18" p:email="amy@gmail.com" p:gender="female">
      </bean>

</beans>